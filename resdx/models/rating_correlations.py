'''
This file is generated from a template. To modify, edit the *.py.jinja file.
'''
from scipy.interpolate import RegularGridInterpolator

from ..enums import StagingType


def cop_47_h1_full(
    staging_type: StagingType, hspf: float, capacity_maintenance_17: float
) -> float:
    if staging_type == StagingType.SINGLE_STAGE:
        rating_range = [5.0, 6.5, 8.0, 9.5, 11.0]
        ratio_range = [0.5, 0.5333333333333333, 0.6, 0.7333333333333333, 1.0]
        input_data = [[2.0064597265703585, 2.8774134075154545, 3.9474100179813916, 5.294492663828182, 7.042301435552941], [1.9984854249405706, 2.8334757940017194, 3.834888943692878, 5.0579868779321435, 6.5855437221173565], [1.9817921928467848, 2.7532803092331433, 3.63856049734637, 4.664813233868525, 5.868624321170614], [1.9578149594383214, 2.6369062792651143, 3.36678765115385, 4.153378405104422, 5.003554874052384], [1.9616292090601968, 2.570645458683656, 3.189545974684677, 3.8185733565701123, 4.457978208487525]]
    elif staging_type == StagingType.TWO_STAGE:
        rating_range = [5.0, 6.5, 8.0, 9.5, 11.0]
        ratio_range = [0.5, 0.5333333333333333, 0.6, 0.7333333333333333, 1.0]
        input_data = [[1.792007008053481, 2.572252875846912, 3.5281764555111943, 4.731186792797513, 6.2913030815723054], [1.782241075552549, 2.528937077685631, 3.4221935055990773, 4.51281948780401, 5.874354158732644], [1.7633064458883243, 2.450123810389532, 3.2375115697115655, 4.150029921818615, 5.220081971025578], [1.7260957325568875, 2.3245593545482, 2.9676374902478724, 3.6605122090225053, 4.40920044844138], [1.670731011874942, 2.1892485129222536, 2.7160916439473435, 3.2514625498409035, 3.795569972947087]]
    elif staging_type == StagingType.VARIABLE_SPEED:
        # Historic NEEP correlation: heating_cop_47 = 2.837 + 0.066 * hspf2
        rating_range = [7.0, 9.25, 11.5, 13.75, 16.0]
        ratio_range = [0.5, 0.54, 0.6200000000000001, 0.7800000000000001, 1.1]
        input_data = [[2.6884602150439925, 4.029993244936325, 5.767873347847002, 8.16292183317246, 11.632383399132014], [2.6074471619367454, 3.814156716519085, 5.315842473438926, 7.230401857402178, 9.754234563628296], [2.4814333774705144, 3.4915900364657766, 4.641628859135214, 5.962609011099552, 7.495454737587738], [2.3544729971963236, 3.1548386475570434, 3.977876145614045, 4.82451994437713, 5.695753108466004], [2.1728491434028365, 2.862621579442618, 3.5482090382552514, 4.229623475586361, 4.906877024410816]]

    return float(RegularGridInterpolator((ratio_range, rating_range), input_data, "linear")(
        (capacity_maintenance_17, hspf)
    ))


def cop_82_b_low(
    staging_type: StagingType, seer: float, seer_eer_ratio: float
) -> float:
    if staging_type == StagingType.SINGLE_STAGE:
        raise RuntimeError("COP 82 B low is not available for single speed equipment.")
    elif staging_type == StagingType.TWO_STAGE:
        rating_range = [6.0, 22.0]
        ratio_range = [1.0, 2.4]
        input_data = [[1.827755337461573, 6.701769570692436], [2.1644614994216913, 7.936358831212868]]
    elif staging_type == StagingType.VARIABLE_SPEED:
        # Historic NEEP correlation: EIRr82min = bracket(1.305 - 0.324 * seer2 / eer2, 0.2, 1.0)
        rating_range = [14.0, 24.5, 35.0]
        ratio_range = [1.0, 1.7466666666666666, 2.12, 2.3066666666666666, 2.4]
        input_data = [[3.953236649355642, 6.898181453165825, 9.826451081313277], [6.108307791177705, 10.174265925689468, 13.893148100206455], [14.213228094135404, 23.215209104752596, 30.56262342522265], [19.477958544662357, 31.7908677554598, 42.31607188535879], [22.996420435091288, 37.45777507896766, 49.78640309236842]]

    return float(RegularGridInterpolator((ratio_range, rating_range), input_data, "linear")(
        (seer_eer_ratio, seer)
    ))