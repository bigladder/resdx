'''
This file is generated from a template. To modify, edit the *.py.jinja file.
'''
from scipy.interpolate import RegularGridInterpolator

from ..enums import StagingType


def cop_47_h1_full(
    staging_type: StagingType, hspf: float, capacity_maintenance_17: float
) -> float:
    if staging_type == StagingType.SINGLE_STAGE:
        rating_range = [5.0, 6.5, 8.0, 9.5, 11.0]
        ratio_range = [0.5, 0.5333333333333333, 0.6, 0.7333333333333333, 1.0]
        input_data = [[2.009891731516297, 2.900448585535248, 4.010093456900876, 5.431988020200642, 7.3195111256671614], [2.0023706693000474, 2.8569653421816468, 3.896276182899059, 5.187447821782225, 6.834654585477289], [1.9865476467401004, 2.77741022573501, 3.6973872951933155, 4.780907663921734, 6.075835035918619], [1.9574755531233932, 2.6460178328890422, 3.391651490198926, 4.201784348292685, 5.085163757622192], [1.9565228521870996, 2.56651436730595, 3.187655458437148, 3.820254637174607, 4.464631903196997]]
    elif staging_type == StagingType.TWO_STAGE:
        rating_range = [5.0, 6.5, 8.0, 9.5, 11.0]
        ratio_range = [0.5, 0.5333333333333333, 0.6, 0.7333333333333333, 1.0]
        input_data = [[1.8101801914391407, 2.614381419505263, 3.6139566602663744, 4.894301728231222, 6.593043340163464], [1.7944511497190678, 2.5621377118761224, 3.493636231889556, 4.650453482642329, 6.125590385256778], [1.7719517709337471, 2.477589708582459, 3.2978089972431004, 4.26355296347275, 5.417320573502955], [1.7357976233144121, 2.3461026554002475, 3.006858220293598, 3.724589726348646, 4.506998638658161], [1.677106395440993, 2.199794318542344, 2.7319437782283686, 3.2738140256949806, 3.825673870939968]]
    elif staging_type == StagingType.VARIABLE_SPEED:
        # Historic NEEP correlation: heating_cop_47 = 2.837 + 0.066 * hspf2
        rating_range = [7.0, 9.25, 11.5, 13.75, 16.0]
        ratio_range = [0.5, 0.54, 0.6200000000000001, 0.7800000000000001, 1.1]
        input_data = [[2.6884602150439925, 4.029993244936325, 5.767873347847002, 8.16292183317246, 11.632383399132014], [2.6074471619367454, 3.814156716519085, 5.315842473438926, 7.230401857402178, 9.754234563628296], [2.4814333774705144, 3.4915900364657766, 4.641628859135214, 5.962609011099552, 7.495454737587738], [2.3544729971963236, 3.1548386475570434, 3.977876145614045, 4.82451994437713, 5.695753108466004], [2.1728491434028365, 2.862621579442618, 3.5482090382552514, 4.229623475586361, 4.906877024410816]]

    return float(RegularGridInterpolator((ratio_range, rating_range), input_data, "linear")(
        (capacity_maintenance_17, hspf)
    ))


def cop_82_b_low(
    staging_type: StagingType, seer: float, seer_eer_ratio: float
) -> float:
    if staging_type == StagingType.SINGLE_STAGE:
        raise RuntimeError("COP 82 B low is not available for single speed equipment.")
    elif staging_type == StagingType.TWO_STAGE:
        rating_range = [6.0, 22.0]
        ratio_range = [1.0, 2.4]
        input_data = [[1.827755337461573, 6.701769570692436], [2.1644614994216913, 7.936358831212868]]
    elif staging_type == StagingType.VARIABLE_SPEED:
        # Historic NEEP correlation: EIRr82min = bracket(1.305 - 0.324 * seer2 / eer2, 0.2, 1.0)
        rating_range = [14.0, 24.5, 35.0]
        ratio_range = [1.0, 1.7466666666666666, 2.12, 2.3066666666666666, 2.4]
        input_data = [[3.953236649355642, 6.898181453165825, 9.826451081313277], [6.108307791177705, 10.174265925689468, 13.893148100206455], [14.213228094135404, 23.215209104752596, 30.56262342522265], [19.477958544662357, 31.7908677554598, 42.31607188535879], [22.996420435091288, 37.45777507896766, 49.78640309236842]]

    return float(RegularGridInterpolator((ratio_range, rating_range), input_data, "linear")(
        (seer_eer_ratio, seer)
    ))