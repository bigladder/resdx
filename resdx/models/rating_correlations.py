"""
This file is generated from a template. To modify, edit the *.py.jinja file.
"""
from scipy.interpolate import RegularGridInterpolator

from ..enums import StagingType


def cop_47_h1_full(staging_type: StagingType, hspf: float, capacity_maintenance_17: float) -> float:
    if staging_type == StagingType.SINGLE_STAGE:
        rating_range = [5.0, 6.5, 8.0, 9.5, 11.0]
        ratio_range = [0.5, 0.5333333333333333, 0.6, 0.7333333333333333, 1.0]
        input_data = [[1.9707525689167469, 2.844438320683637, 3.932622659191703, 5.326991657059978, 7.177930054093416], [1.9628443254473278, 2.800551694515634, 3.819310780548269, 5.084928332811592, 6.699499297907472], [1.9458491393528918, 2.720493249326752, 3.621592575520113, 4.682863488723969, 5.951177817959451], [1.9150348596070912, 2.588635563129307, 3.3180810804373113, 4.110616451150018, 4.974796610575278], [1.904266993736938, 2.497955524723362, 3.1024902665758654, 3.718171186668921, 4.345309416663822]]
    elif staging_type == StagingType.TWO_STAGE:
        rating_range = [5.0, 6.5, 8.0, 9.5, 11.0]
        ratio_range = [0.5, 0.5333333333333333, 0.6, 0.7333333333333333, 1.0]
        input_data = [[1.7942855944084002, 2.5916448771333833, 3.5825249774526053, 4.851730825608287, 6.535690134063281], [1.778986160937729, 2.540291683437151, 3.4638458735704587, 4.610795726172915, 6.073347740823604], [1.756592722393082, 2.456386147871528, 3.2695841015439164, 4.22705985880172, 5.370947884951006], [1.7203238213878786, 2.325187127432761, 2.980050454499103, 3.6913808495307268, 4.466810880751618], [1.6591138244779793, 2.1761929600139696, 2.7026315115116635, 3.2386859156367755, 3.7846220634737833]]
    elif staging_type == StagingType.VARIABLE_SPEED:
        # Historic NEEP correlation: heating_cop_47 = 2.837 + 0.066 * hspf2
        rating_range = [7.0, 9.25, 11.5, 13.75, 16.0]
        ratio_range = [0.5, 0.54, 0.6200000000000001, 0.7800000000000001, 1.1]
        input_data = [[2.7615174522980492, 4.1485710088989105, 5.9340351273548695, 8.39246229838129, 11.947880320460827], [2.695619065657993, 3.941100959258363, 5.490182175765851, 7.463067301868656, 10.060210076720686], [2.5786152725444227, 3.627351231436988, 4.820617593219162, 6.190336338417581, 7.778508650632043], [2.4666459333349264, 3.3051087647532986, 4.167306479413381, 5.0542179253576025, 5.966873002332689], [2.345297208339999, 3.0914418940374047, 3.833849310806386, 4.57252496646432, 5.307474482001615]]

    return float(RegularGridInterpolator((ratio_range, rating_range), input_data, "linear")(
        (capacity_maintenance_17, hspf)
    ))


def cop_82_b_low(staging_type: StagingType, seer: float, seer_eer_ratio: float) -> float:
    if staging_type == StagingType.SINGLE_STAGE:
        raise RuntimeError("COP 82 B low is not available for single speed equipment.")
    elif staging_type == StagingType.TWO_STAGE:
        rating_range = [6.0, 22.0]
        ratio_range = [1.0, 2.4]
        input_data = [[1.7772312730848057, 6.5165146679776615], [2.1046299727964275, 7.716976566920232]]
    elif staging_type == StagingType.VARIABLE_SPEED:
        # Historic NEEP correlation: EIRr82min = bracket(1.305 - 0.324 * seer2 / eer2, 0.2, 1.0)
        rating_range = [14.0, 24.5, 35.0]
        ratio_range = [1.0, 1.7466666666666666, 2.12, 2.3066666666666666, 2.4]
        input_data = [[4.046455941410295, 7.060027226921917, 10.055819485869792], [6.165269142453248, 10.277231984957478, 14.042105377494481], [14.240241730440294, 23.261833752330148, 30.66463146960806], [19.508088276081157, 31.842461807964916, 42.38831468300695], [23.028778414477685, 37.51287887399245, 49.863167993894436]]

    return float(RegularGridInterpolator((ratio_range, rating_range), input_data, "linear")((seer_eer_ratio, seer)))